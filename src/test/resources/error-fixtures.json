[
  [
    {},
    {},
    "$",
    "objects must have exactly 1 key defined, found 0"
  ],
  [
    {"all":[1]},
    {},
    "$.all",
    "all expects exactly 2 arguments"
  ],
  [
    {"all":[{"some":[]}, 1]},
    {},
    "$.all[0].some",
    "some expects exactly 2 arguments"
  ],
  [
    {"all":[[1], {"none":[]}]},
    {},
    "$.all[1].none",
    "none expects exactly 2 arguments"
  ],
  [
    {"some":[0, 1]},
    {},
    "$.some[0]",
    "first argument to some must be a valid array"
  ],
  [
    {"none":[1, 2]},
    {},
    "$.none[0]",
    "first argument to none must be a valid array"
  ],
  [
    {"cat":["foo", {}]},
    {},
    "$.cat[1]",
    "objects must have exactly 1 key defined, found 0"
  ],
  [
    {"==":[0]},
    {},
    "$.==",
    "equality expressions expect exactly 2 arguments"
  ],
  [
    {"filter":[0]},
    {},
    "$.filter",
    "filter expects exactly 2 arguments"
  ],
  [
    {"filter":[1, 2]},
    {},
    "$.filter[0]",
    "first argument to filter must be a valid array"
  ],
  [
    {"filter":["foo", {}]},
    {},
    "$.filter[1]",
    "objects must have exactly 1 key defined, found 0"
  ],
  [
    {"if":[{}]},
    {},
    "$.if[0]",
    "objects must have exactly 1 key defined, found 0"
  ],
  [
    {"if":[true,{}]},
    {},
    "$.if[1]",
    "objects must have exactly 1 key defined, found 0"
  ],
  [
    {"if":[false,1,{"filter":[1]}]},
    {},
    "$.if[2].filter",
    "filter expects exactly 2 arguments"
  ],
  [
    {"if":[false,1,true,{"filter":[1]}]},
    {},
    "$.if[3].filter",
    "filter expects exactly 2 arguments"
  ],
  [
    {"!=":[0]},
    {},
    "$.!=",
    "equality expressions expect exactly 2 arguments"
  ],
  [
    {"log":[]},
    {},
    "$.log",
    "log operator requires exactly 1 argument"
  ],
  [
    {"and":[]},
    {},
    "$.and",
    "and operator expects at least 1 argument"
  ],
  [
    {"and":[true,{"log":[]}]},
    {},
    "$.and[1].log",
    "log operator requires exactly 1 argument"
  ],
  [
    {"or":[]},
    {},
    "$.or",
    "or operator expects at least 1 argument"
  ],
  [
    {"map":[1]},
    {},
    "$.map",
    "map expects exactly 2 arguments"
  ],
  [
    {"+":[1, {"-": [2, {"*": [3, {"/": [4, {"log":[]}]}]}]}]},
    {},
    "$.+[1].-[1].*[1]./[1].log",
    "log operator requires exactly 1 argument"
  ],
  [
    {"%":[1, {"min": [2, {"max": [3, {"log":[]}]}]}]},
    {},
    "$.%[1].min[1].max[1].log",
    "log operator requires exactly 1 argument"
  ],
  [
    {"merge":[1, 2, {"log":[]}]},
    {},
    "$.merge[2].log",
    "log operator requires exactly 1 argument"
  ],
  [
    {"missing_some":[1]},
    {},
    "$.missing_some",
    "missing_some expects first argument to be an integer and the second argument to be an array"
  ],
  [
    {"missing_some":[1, 2]},
    {},
    "$.missing_some",
    "missing_some expects first argument to be an integer and the second argument to be an array"
  ],
  [
    {"missing":[1, {"log":[]}]},
    {},
    "$.missing[1].log",
    "log operator requires exactly 1 argument"
  ],
  [
    {"!":[1, {"log":[]}]},
    {},
    "$.![1].log",
    "log operator requires exactly 1 argument"
  ],
  [
    {"!!":[{"log":[]}]},
    {},
    "$.!![0].log",
    "log operator requires exactly 1 argument"
  ],
  [
    {"<":[1]},
    {},
    "$.<",
    "'<' requires at least 2 arguments"
  ],
  [
    {">":[1]},
    {},
    "$.>",
    "'>' requires at least 2 arguments"
  ],
  [
    {"<=":[1]},
    {},
    "$.<=",
    "'<=' requires at least 2 arguments"
  ],
  [
    {">=":[1]},
    {},
    "$.>=",
    "'>=' requires at least 2 arguments"
  ],
  [
    {">":[1, {"log":[]}]},
    {},
    "$.>[1].log",
    "log operator requires exactly 1 argument"
  ],
  [
    {">":[0, 1, 2, "three", 4, 5, {"log":[]}]},
    {},
    "$.>[6].log",
    "log operator requires exactly 1 argument"
  ],
  [
    {"reduce":[1]},
    {},
    "$.reduce",
    "reduce expects exactly 3 arguments"
  ],
  [
    {"reduce":[{"log":[]}, 2, 3]},
    {},
    "$.reduce[0].log",
    "log operator requires exactly 1 argument"
  ],
  [
    {"reduce":[[1], {"log":[]}, 3]},
    {},
    "$.reduce[1].log",
    "log operator requires exactly 1 argument"
  ],
  [
    {"reduce":[1, 2, {"log":[]}]},
    {},
    "$.reduce[2].log",
    "log operator requires exactly 1 argument"
  ],
  [
    {"===":[1]},
    {},
    "$.===",
    "equality expressions expect exactly 2 arguments"
  ],
  [
    {"!==":[1]},
    {},
    "$.!==",
    "equality expressions expect exactly 2 arguments"
  ],
  [
    {"substr":["jsonlogic"]},
    {},
    "$.substr",
    "substr expects 2 or 3 arguments"
  ],
  [
    {"substr":["jsonlogic", "one"]},
    {},
    "$.substr[1]",
    "second argument to substr must be a number"
  ],
  [
    {"substr":["jsonlogic", 1, "two"]},
    {},
    "$.substr[2]",
    "third argument to substr must be an integer"
  ],
  [
    {"var":[[1, 2]]},
    {},
    "$.var[0]",
    "var first argument must be null, number, or string"
  ],
  [
    {"var":"key.foo"},
    {"key": [1, 2]},
    "$.var[0]",
    "java.lang.NumberFormatException: For input string: \"foo\""
  ]
]
